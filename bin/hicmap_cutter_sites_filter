#!/usr/bin/env python
import sys
import re

def std_print(str):
    try:
        print str,
    except IOError:
        try:
            sys.stdout.close()
        except IOError:
            pass
        try:
            sys.stderr.close()
        except IOError:
            pass
    
    
def main():
    """ main function """
    pattern1=re.compile("@SQ\s+SN:chr[0-9a-zA-Z_]*\s+")
    pattern2=re.compile("@PG\s+ID:bwa\s+")
    NUM_SHORT_PAIRS=0
    NUM_LONG_PAIRS=0
    NUM_CIS_PAIRS=0
    DIST_CUTOFF=int(sys.argv[1])
    fin = sys.stdin
    read_prev = None
    while True:
        read_cur = fin.readline()
        if read_cur == "": break
        if (re.search(pattern1, read_cur) != None) or (re.search(pattern2, read_cur) != None):
            std_print(read_cur)
        else:
            if read_prev == None: 
                read_prev = read_cur
            else: 
                if read_cur.split()[0] == read_prev.split()[0]:
                    std_print(read_prev)
                    std_print(read_cur)
                    if abs(int(read_prev.split()[8])) >= DIST_CUTOFF: NUM_LONG_PAIRS+= 1
                    if abs(int(read_prev.split()[8])) < DIST_CUTOFF:  NUM_SHORT_PAIRS+= 1   
                    NUM_CIS_PAIRS += 1                 
                    read_prev = read_cur
                else:
                    read_prev = read_cur
    fin.close()
    print  >>sys.stderr, "number of cis pairs after filtered by cutter cites: ", NUM_CIS_PAIRS
    print  >>sys.stderr, "number of short-range cis pairs after filtered by cutter cites: ", NUM_SHORT_PAIRS
    print  >>sys.stderr, "number of long-range cis pairs after filtered by cutter cites: ", NUM_LONG_PAIRS
    
if __name__ == '__main__':
    main()